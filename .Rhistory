demo()
install.packages("KernSmooth")
install.packages("KernSmooth")
load kernsmoot
library(kernsmooth)
library(KernSmooth)
3<4
source('~/.active-rstudio-document')
3<4
3<4
msg <-"hello"
x <- 1
x
x
msg
c(a,b,c)
X <-1:20
x
X <- 1:20
X
Y <- c(1.7, "a")
C
c
y <- c(True,2)
y <- c(TRUE,2)
y
x <- 0:6
class(x)
as.numeric(x)
x
as.logical(x)
as.complex(x)
x <- c("a","b", "c")
as.numeric(x)
m <= matrix(nrow=2, ncol=3)
m <- Matrix(nrow=2, ncol=3)
m <- matrix(nrow=2, ncol=3)
m
m <- matrix(1:6,nrow=2, ncol=3)
m
0/0
is.na(0/0)
m <- matrix(1:6,nrow=2, ncol=3)
m
m <- matrix(1:6,nrow=2, ncol=40)
m <- matrix(1:6,nrow=2, ncol=5)
m <- matrix(1:50,nrow=2, ncol=50)
m
x <- data.frame(foo 1:6, bar 1:3)
x <- 1:3
x
x <- x("a", "b", "c", "d")
x <- c("a", "b", "c", "d")
x[2]
x[1:4]
x <- matrix(1:6,2,3)
x[1,2]
x[2,1]
x[1,2, drop=FALSE]
x <- list(foo=1:4, bar=0.6)
x[1]
$foo
X$bar
$foo
x$foo
x$bar
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 1:3
x+y
x <- 1:4
y <- 2:3
x+y
datasciencecoursera = read.csv('hw1_data.csv')[c(1,2),]
datasciencecoursera = read.csv('hw1_data.csv')[c(1,2),]
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,7)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
[[x]]
x[[2]]
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <= x-3
y <-x-3
y
c(1.1,9,3.14)
z <-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
?my_sqrt()
mysqrt
my_sqrt
my_div(z/my_sqrt)
my_div < - z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
swirl()
1:20
pi:10
15:1
":"
?":"
seq(1,20)
seq(o,10, by.5)
seq(0,10, by.5)
seq(0,10, by=.5)
seq(0,10, length=30)
my_seq <- seq(0,10,length=30)
my_seq <- seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Kevin Bolick")
my_name
paste(my_name,collapse=" ")
paste("Hello, "world!", sep=" ")
paste("Hello", "world!", sep=" ")
past(c(1:3),c("X","Y","Z"), sep="")
paste(c(1:3),c("X","Y","Z"), sep="")
paste(LETTERS,1:4,sep"-")
paste(LETTERS,1:4,sep="-")
swirl()
x <- c(44, NA, 4, NA)
x <- c(44, NA, 4, NA)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(x(y,z),100)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data,TRUE)
sum(my_na)
my_data
0/0
inf - inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(3:7)
c(3,5,7)
[c(3,5,7)]
c()
[c(3,5,7)]
c(3,5,7)
c(3,5,7)
c(3,5,7)
c(3,5,7)
info()
skip()
bye()
swirl()
swirl()
library("swirl")
swirl()
0
0
0
exit
x[0]
x[3000]
x[c(-2.-10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- x(foo=11,bar=2,norf=NA)
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo,"bar","norf")
names(vect2) <- c("foo","bar","norf")
identica(vect,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
quit
quit()
cube <- function(x, n) {x^3}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
+     g <- function(y) {
+         y + z
+     }
+     z <- 4
+     x + g(x)
+ }
> z <- 10
> f(4)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(4)
f(5)
f(22)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 40
x + g(x)
}
f(22)
f(22,2)
f(22)
f <- function(x) {
g <- function(y) {
y + x
}
z <- 40
x + g(x)
}
f(22)
￼dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip" download.file(dataset_url, "diet_data.zip")unzip("diet_data.zip", exdir = "diet_data")
￼dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip" download.file(dataset_url, "diet_data.zip")unzip("diet_data.zip", exdir = "diet_data")
￼dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip" download.file(dataset_url, "diet_data.zip")unzip("diet_data.zip", exdir = "diet_data")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
￼andy <- read.csv("diet_data/Andy.csv")
and <- read.csv("diet_data/Andy.csv")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
length(andy$Age)
crazy <- function() {
x <- 42
x <<- 3.14
print(x)
}
crazy()
crazy(x)
crazy()
crazy()
crazy()
source("cachemean.R")
source("cachematrix.R")
setwd("~/")
setwd("~/Desktop/Coursera/R Programing/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
